{"version":3,"sources":["components/contactform/contactForm.module.css","components/contactlist/contactList.module.css","components/contactform/alert.module.css","components/app/app.module.css","components/filtr/filter.module.css","redux/phoneConstants.jsx","redux/phoneActions.jsx","components/contactform/ContactForm.jsx","components/filtr/Filter.jsx","components/contactlist/ContactList.jsx","components/app/App.jsx","redux/phoneReducer.jsx","redux/store.jsx","index.js"],"names":["module","exports","actionType","recordAdd","createAction","recordRemove","changeFilter","ContactForm","state","name","number","isExist","numberValidation","value","lastSymbolAdd","split","pop","isNumberValid","length","Number","setState","phoneNumLength","x","splice","join","handleChange","e","target","handleFindOverlap","newName","props","contacts","some","contact","toLowerCase","handleSubmit","preventDefault","clearSetState","newContact","id","uuidv4","onRecordAdd","this","CSSTransition","in","timeout","classNames","styleAlert","onEntered","setTimeout","unmountOnExit","Alert","variant","className","alert","onSubmit","style","phoneBookForm","htmlFor","labelStyle","type","onChange","Component","protoTypes","onFindOverlap","PropTypes","func","isRequired","onCheckIn","connect","dispatch","newRecord","phoneActions","Filter","filter","onChangeFilter","onFindContact","ev","ContactList","handleFindContacts","startsWith","searchList","ListGroup","TransitionGroup","map","key","Item","Row","Col","todo","sm","Button","size","onClick","onRecordRemove","onShowFindRes","onDelete","Phonebook","isAnimation","localStorage","setItem","JSON","stringify","contactsFromStorage","parse","getItem","container","contactsReducer","createReducer","action","payload","elem","filterReducer","store","configureStore","reducer","phoneReducer","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.9048634f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"contactForm_phoneBookForm__1TPsA\",\"labelStyle\":\"contactForm_labelStyle__2sI2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"contactList_todo__OlPqg\",\"enter\":\"contactList_enter__3ZUya\",\"enterActive\":\"contactList_enterActive__DiIVp\",\"exit\":\"contactList_exit__3_cui\",\"exitActive\":\"contactList_exitActive__WD96I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__3B_Y0\",\"enter\":\"alert_enter__3rwnK\",\"enterActive\":\"alert_enterActive__3Jtf_\",\"exit\":\"alert_exit__R87ir\",\"exitActive\":\"alert_exitActive___Tvqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3gz7V\",\"enter\":\"app_enter__poNk2\",\"enterActive\":\"app_enterActive__33xUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelStyle\":\"filter_labelStyle__1zSQc\"};","export const actionType = {\r\n  ADD: \"ADD\",\r\n  REMOVE: \"REMOVE\",\r\n  CHANGE: \"CHANGE\"\r\n};\r\n","import { actionType } from \"./phoneConstants\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const recordAdd = createAction(actionType.ADD);\r\nexport const recordRemove = createAction(actionType.REMOVE);\r\nexport const changeFilter = createAction(actionType.CHANGE);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as phoneActions from \"../../redux/phoneActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport style from \"./contactForm.module.css\";\r\nimport styleAlert from \"./alert.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isExist: false,\r\n  };\r\n\r\n  numberValidation = (value) => {\r\n    const lastSymbolAdd = value.split(\"\").pop();\r\n    const isNumberValid = value.length < 10 && Number(lastSymbolAdd);\r\n    const isDeletePush = value.length < this.state.number.length;\r\n    if (isDeletePush) {\r\n      this.setState({ number: value });\r\n    } else {\r\n      if (isNumberValid || isNumberValid === 0) {\r\n        const phoneNumLength = value.length;\r\n        if (phoneNumLength === 4 || phoneNumLength === 7) {\r\n          let x = value.split(\"\");\r\n          x.splice(phoneNumLength - 1, 0, \"-\");\r\n          x = x.join(\"\");\r\n          value = x;\r\n        }\r\n        this.setState({ number: value });\r\n      }\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    if (name === \"number\") {\r\n      this.numberValidation(value);\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n  clearSetState() {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  }\r\n  handleFindOverlap = (newName) =>\r\n    this.props.contacts.some((contact) =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .some((name) => name === newName.toLowerCase())\r\n    );\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (this.handleFindOverlap(name)) {\r\n      this.setState({ isExist: true });\r\n      this.clearSetState();\r\n      return;\r\n    }\r\n\r\n    const newContact = { id: uuidv4(), name, number };\r\n    name && number && this.props.onRecordAdd(newContact);\r\n    this.clearSetState();\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={this.state.isExist}\r\n          timeout={1500}\r\n          classNames={styleAlert}\r\n          onEntered={() =>\r\n            setTimeout(() => this.setState({ isExist: false }), 1000)\r\n          }\r\n          unmountOnExit\r\n        >\r\n          <Alert variant=\"danger\" className={styleAlert.alert}>\r\n            Contact already exists!\r\n          </Alert>\r\n        </CSSTransition>\r\n\r\n        <form onSubmit={this.handleSubmit} className={style.phoneBookForm}>\r\n          <label htmlFor=\"nameForm\" className={style.labelStyle}>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n              id=\"nameForm\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"numberForm\" className={style.labelStyle}>\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n              id=\"numberForm\"\r\n            ></input>\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactForm.protoTypes = {\r\n  onFindOverlap: PropTypes.func.isRequired,\r\n  onCheckIn: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRecordAdd: (newRecord) => dispatch(phoneActions.recordAdd(newRecord)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as phoneActions from \"../../redux/phoneActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./filter.module.css\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      this.props.contacts.length && (\r\n        <div>\r\n          <h2>Contacts</h2>\r\n          <label htmlFor=\"findForm\" className={style.labelStyle}>\r\n            Find contacts by name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={this.props.filter}\r\n              onChange={this.props.onChangeFilter}\r\n              id=\"findForm\"\r\n            />\r\n          </label>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nFilter.protoTypes = {\r\n  onFindContact: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (ev) => dispatch(phoneActions.changeFilter(ev.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as phoneActions from \"../../redux/phoneActions\";\r\n\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { ListGroup, Button, Row, Col } from \"react-bootstrap\";\r\nimport style from \"./contactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ContactList extends Component {\r\n  handleFindContacts = () => {\r\n    if (this.props.filter) {\r\n      return this.props.contacts.filter((contact) =>\r\n        contact.name\r\n          .toLowerCase()\r\n          .split(\" \")\r\n          .some((name) => name.startsWith(this.props.filter.toLowerCase()))\r\n      );\r\n    } else {\r\n      return this.props.contacts;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const searchList = this.handleFindContacts();\r\n    return (\r\n      <div>\r\n        <ListGroup>\r\n          <TransitionGroup className=\"todo-list\">\r\n            {searchList.map(({ name, number, id }) => (\r\n              <CSSTransition key={id} timeout={250} classNames={style}>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col className={style.todo}>{name}</Col>\r\n                    <Col sm=\"auto\" className={style.todo}>\r\n                      {number}\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size=\"sm\"\r\n                        id={id}\r\n                        onClick={this.props.onRecordRemove}\r\n                      >\r\n                        &times;\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.protoTypes = {\r\n  onShowFindRes: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRecordRemove: (ev) => dispatch(phoneActions.recordRemove(ev.target.id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ContactForm from \"../contactform/ContactForm\";\r\nimport Filter from \"../filtr/Filter\";\r\nimport ContactList from \"../contactlist/ContactList\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport style from \"./app.module.css\";\r\n\r\nexport class Phonebook extends Component {\r\n  state = {\r\n    isAnimation: false\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"contacts\", `${JSON.stringify(this.state.contacts)}`);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ isAnimation: true });\r\n    const contactsFromStorage = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    contactsFromStorage && this.setState({ contacts: contactsFromStorage });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.container}>\r\n        <CSSTransition\r\n          in={this.state.isAnimation}\r\n          timeout={500}\r\n          classNames={style}\r\n        >\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n        <Filter></Filter>\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import { actionType } from \"./phoneConstants\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nconst initialState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  { id: \"id-5\", name: \"ennie kopeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport const contactsReducer = createReducer(initialState, {\r\n  [actionType.ADD]: (state, action) => [...state, action.payload],\r\n  [actionType.REMOVE]: (state, action) =>\r\n    [...state].filter((elem) => elem.id !== action.payload),\r\n});\r\nexport const filterReducer = createReducer(\"\", {\r\n  [actionType.CHANGE]: (state, action) => action.payload,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport * as phoneReducer from \"./phoneReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phoneReducer.contactsReducer,\r\n    filter: phoneReducer.filterReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/app/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}